name: Cabal Build

on:
  push:
    branches:
      - main
  pull_request:

# on:
#   create:
#     tags:
#       - '*'

jobs:
  build:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        cabal: ["3.6.2.0"]
        ghc: ["9.0.1"]
        include:
          - os: ubuntu-latest
            os_name: linux
            artifact: "pboy-linux.tar.gz"
          - os: macOS-latest
            os_name: osx
            artifact: "pboy-osx.tar.gz"

    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1.2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - run: cabal update
    - run: cabal freeze

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: v2-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          v2-${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build
      run: |
        mkdir bin
        cabal install --install-method=copy --installdir=bin
        ldd bin/pboy || otool -L bin/pboy || true

    # - name: Compress binaries
    #   uses: svenstaro/upx-action@v2
    #   with:
    #     file: bin/pboy
    #     args: --best
    #     strip: true

    - name: Prepare Publishing
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd bin
        tar -czf ${{ matrix.artifact }} pboy
        shasum -a 256 ${{ matrix.artifact }}

    - name: Publish Release Binaries
      if: startsWith(github.ref, 'refs/tags/')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: bin/${{ matrix.artifact }}
        tag: ${{ github.ref }}
        prerelease: true
        overwrite: true
